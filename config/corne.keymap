/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&lt {
    tapping-term-ms = <100>;
    flavor = "balanced";
    retro-tap;
};

/ {
    behaviors {
        lhr: lhr {
            compatible = "zmk,behavior-hold-tap";
            label = "LHR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
            flavor = "balanced";
            retro-tap;
            hold-trigger-key-positions = <12 13 14 15 16 17>;
        };

        rhr: rhr {
            compatible = "zmk,behavior-hold-tap";
            label = "RHR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
            flavor = "balanced";
            retro-tap;
            hold-trigger-key-positions = <18 19 20 21 22 23>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q  &kp W        &kp E          &kp R         &kp T          &kp Y        &kp U            &kp I               &kp O             &kp P     &none
&none  &kp A  &lhr LALT S  &lhr LSHIFT D  &lhr LCTRL F  &lhr LCMD G    &rhr RCMD H  &rhr RCTRL J     &rhr RIGHT_SHIFT K  &rhr RIGHT_ALT L  &kp SEMI  &none
&none  &kp Z  &kp X        &kp C          &kp V         &kp B          &kp N        &kp M            &kp COMMA           &kp DOT           &kp FSLH  &none
                           &kp CAPSLOCK   &lt 3 TAB     &lt 2 ENTER    &lt 1 SPACE  &lt 4 BACKSPACE  &kp GLOBE
            >;
        };

        nums_fs {
            bindings = <
&trans  &kp MINUS     &kp N7        &kp N8        &kp N9        &kp EQUAL       &kp F9  &kp F10  &kp F11  &kp F12  &trans  &trans
&trans  &kp PLUS      &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp ASTERISK    &kp F5  &kp F6   &kp F7   &kp F8   &trans  &trans
&trans  &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp SLASH       &kp F1  &kp F2   &kp F3   &kp F4   &trans  &trans
                                    &trans        &kp TILDE     &kp GRAVE       &trans  &trans   &trans
            >;
        };

        symbols {
            bindings = <
&trans  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR      &kp PERCENT    &kp CARET             &kp AMPERSAND          &kp ASTERISK      &kp MINUS          &kp PLUS              &trans
&trans  &trans           &trans       &trans    &kp UNDERSCORE  &kp EQUAL      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp PIPE              &none
&trans  &trans           &trans       &trans    &trans          &trans         &kp SQT               &kp DOUBLE_QUOTES      &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp NON_US_BACKSLASH  &trans
                                      &trans    &trans          &trans         &kp ESCAPE            &trans                 &trans
            >;
        };

        move {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp HOME  &kp PAGE_UP  &kp PAGE_DOWN  &kp END    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp LEFT  &kp DOWN     &kp UP_ARROW   &kp RIGHT  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans    &trans       &trans         &trans     &trans
                        &trans  &trans  &trans    &trans  &trans    &trans
            >;
        };

        system {
            bindings = <
&trans  &trans      &trans            &trans      &kp C_BRI_DEC      &kp C_BRI_INC      &trans        &trans        &trans        &trans        &bt BT_CLR    &trans
&trans  &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans
&trans  &trans      &trans            &trans      &kp K_MUTE         &trans             &trans        &trans        &trans        &trans        &trans        &trans
                                      &trans      &trans             &trans             &trans        &trans        &trans
            >;
        };
    };
};
